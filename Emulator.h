#ifndef _EMULATOR_H      // UNIX way of preventing multiple inclusions.
#define _EMULATOR_H

/**/
/*
Emulator Class

NAME

     Emulator - run the VC-3600 machine code generated by the Assembler.

DESCRIPTION

     Emulator class - supports the emulation of VC3600 programs

AUTHOR

     Abish Jha

DATE

     12/05/2017

*/
/**/


class emulator {

public:

    const static int MEMSZ = 10000;	// The size of the memory of the VC3600.
    emulator() {

        memset( m_memory, 0, MEMSZ * sizeof(int) );
        m_accumulator = 0;
        m_org = 0; 
        m_firstInst = true;
        m_kill = false;

    }

    // Records instructions and data into VC3600 memory.
    bool insertMemory( int a_location, int a_contents );
    
    // Runs the VC3600 program recorded in memory.
    bool runProgram( );

private:

    int m_memory[MEMSZ];           // The memory of the VC3600.
    int m_accumulator;			// The accumulator for the VC3600

    bool m_firstInst;              // If the incoming statement is the first line
    int m_org;                     // Store the origin location for the program

    int m_loc;                     // Store the current location
    int m_opcode;                  // Store the opcode for the current statement
    int m_operand;                 // Store the operand for the current statement

    bool m_kill;                   // Kill switch to be switched on by the halt or other statement where required

    // Functions for the thirteen possible operations in a VC-3600 computer
    void add();
    void sub();
    void mult();
    void div();
    void load();
    void store();
    void read();
    void write();
    void b();
    void bm();
    void bz();
    void bp();
    void halt();
};

#endif

